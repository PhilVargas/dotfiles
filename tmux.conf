# Make Ctrl+Space the prefix key
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# improve colors
set -g default-terminal 'screen-256color'
set-window-option -g utf8 on


###############################################################################
###############################################################################
### Awesome copy and paste
###############################################################################
###############################################################################

# User vim keybindings
# For a full list, open the tmux command line with <prefix> :
# and issue list-keys -t vi-copy
set-window-option -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

###############################################################################
###############################################################################
### Vim Resizing
###############################################################################
###############################################################################
# resize panes like vim
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r - resize-pane -D 5
bind -r + resize-pane -U 5


###############################################################################
###############################################################################
### Vim Movement Across Panes
###############################################################################
###############################################################################

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

###############################################################################
###############################################################################
### Better Window Management
###############################################################################
###############################################################################

# create a new window with prefix + n
bind-key -r n new-window -c "#{pane_current_path}"
# create a new horizontal split pane with prefix + c
bind-key -r h split-window -v -c "#{pane_current_path}"
# create a new vertical split pane with prefix + p
bind-key -r v split-window -h -c "#{pane_current_path}"
# go to the previous window
bind-key p last-window

###############################################################################
###############################################################################
### Status bar
###############################################################################
###############################################################################
#
set -g status-bg black
set -g status-fg white
set -g window-status-bg black
set -g window-status-current-fg yellow
set -g status-interval 10
set -g status-left-length 50

###############################################################################
###############################################################################
### Message bar
###############################################################################
###############################################################################
set -g message-attr bright
set -g message-bg black
set -g message-fg blue
set -g display-time 2000
set -g display-panes-time 2000

###############################################################################
###############################################################################
### Automatically set window title
###############################################################################
###############################################################################
set-window-option -g automatic-rename on
set-option -g set-titles on

###############################################################################
###############################################################################
### Window Numbering
###############################################################################
###############################################################################

# Start Window Numbers at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

###############################################################################
###############################################################################
### Misc
###############################################################################
###############################################################################
# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right 'arcin'

# increase scrollback to 10,000 lines
set -g history-limit 10000

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
# bind r source-file ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."

